diff --git a/Makefile.am b/Makefile.am
index 3a69c87..ee8cc01 100644
--- a/Makefile.am
+++ b/Makefile.am
@@ -1,68 +1,15 @@
 ACLOCAL_AMFLAGS = -I m4
 
-SUBDIRS= \
-aggregator \
-anonymizer \
-debug_sender \
-device_classifier \
-email_reporter \
+SUBDIRS=email_reporter \
+flow_meter \
+traffic_repeater \
 flowcounter \
-ipv6stats \
-json_dump \
-json_replay \
-link_traffic \
 logger \
 logreplay \
 merger \
-mux \
-demux \
-natpair \
-prefix_tags \
-proto_traffic \
-pdns_exporter \
-report2idea \
-resolver \
-topn \
-traffic_repeater \
-unirec2json \
-endiverter
-
-EXTRA_DIST = AUTHORS COPYING ChangeLog INSTALL NEWS README.md nfreader \
-	debian/README.Debian \
-	debian/changelog \
-	debian/compat \
-	debian/control \
-	debian/copyright \
-	debian/nemea-modules-dev.install \
-	debian/nemea-modules.install \
-	debian/patches \
-	debian/rules \
-	debian/source \
-	debian/watch
-
-if HAVE_LIBNF
-SUBDIRS += nfreader
-SUBDIRS += nfwriter
-endif
-
-if HAVE_LIBLUA
-SUBDIRS += luamodule
-endif
+topn
 
-if HAVE_BISON
-SUBDIRS += unirecfilter
-if HAVE_OPENSSL
-SUBDIRS += scalar-aggregator
-endif
-endif
-
-if COMPILE_FLOWMETER
-SUBDIRS += flow_meter
-endif
-
-if HAVE_LIBCURL
-SUBDIRS += bloom_history
-endif
+EXTRA_DIST = AUTHORS COPYING ChangeLog INSTALL NEWS README.md
 
 RPMDIR = RPMBUILD
 
diff --git a/configure.ac b/configure.ac
index 2942a95..cae8db5 100644
--- a/configure.ac
+++ b/configure.ac
@@ -43,11 +43,6 @@ AC_SUBST(BINDIR)
 bashcompldir=${sysconfdir}/bash_completion.d
 AC_SUBST(bashcompldir)
 
-deviceclassifierdatadir=${pkgdatadir}/device_classifier
-AC_DEFINE_DIR(DEVICECLASSIFIERDATADIR, [deviceclassifierdatadir], [Path to SVM data files])
-AC_SUBST(DEVICECLASSIFIERDATADIR)
-AC_SUBST(deviceclassifierdatadir)
-
 RPM_REQUIRES=
 RPM_BUILDREQ=
 
@@ -81,9 +76,6 @@ esac], [repobuild=false])
 
 AX_C_BIGENDIAN_CROSS
 
-AX_OPENMP([], [AC_MSG_ERROR([OpenMP was not found. Some modules need it (e.g. merger)])])
-AC_SUBST(OPENMP_CFLAGS)
-
 backup_libs=${LIBS}
 NONNEMEA_LIBS=${backup_libs}
 AC_SUBST(NEMEA_FRAMEWORK_LIBS)
@@ -95,8 +87,6 @@ NEMEA_FRAMEWORK_LIBS=${LIBS}
 AC_SUBST(NEMEA_FRAMEWORK_LIBS)
 #LIBS=${backup_libs}
 
-PKG_CHECK_MODULES([cmocka], [cmocka], [have_cmocka="yes"], [have_cmocka="no"])
-AM_CONDITIONAL([HAVE_CMOCKA], [test x$have_cmocka = xyes])
 
 AC_ARG_WITH([openssl],
         [AS_HELP_STRING([--without-openssl], [Force to disable openssl])],
@@ -114,22 +104,6 @@ else
   AC_DEFINE([HAVE_OPENSSL], [0], [Define to 1 if the openssl is available])
 fi
 
-AC_ARG_WITH([libcurl],
-        [AS_HELP_STRING([--without-libcurl], [Force to disable libcurl])],
-        [if test x$withval = xyes; then
-        PKG_CHECK_MODULES([libcurl], [libcurl], [have_libcurl="yes"], [have_libcurl="no"])
-        fi],
-        [PKG_CHECK_MODULES([libcurl], [libcurl], [have_libcurl="yes"], [have_libcurl="no"])])
-
-AM_CONDITIONAL([HAVE_LIBCURL], [test x$have_libcurl = xyes])
-if test x$have_libcurl = xyes; then
-  AC_DEFINE([HAVE_LIBCURL], [1], [Define to 1 if the libcurl is available])
-  RPM_REQUIRES+=" libcurl"
-  RPM_BUILDREQ+=" libcurl-devel"
-else
-  AC_DEFINE([HAVE_LIBCURL], [0], [Define to 1 if the libcurl is available])
-fi
-
 AC_ARG_WITH([flowcachesize],
 	AC_HELP_STRING([--with-flowcachesize=NUMBER],[Set default size of flow cache for flow_meter module in number of flow records.]),
 	[
@@ -143,36 +117,6 @@ AC_ARG_WITH([flowcachestats],
 	]
 )
 
-AC_ARG_WITH([nfreader],
-	AC_HELP_STRING([--without-nfreader], [Skip nfreader module.]),
-        [if test "$withval" = "no"; then
-                withnfreader="no"
-        else
-                withnfreader="yes"
-        fi], [withnfreader="yes"])
-
-if test x${withnfreader} = xyes; then
-	# Checks for libraries.
-	AC_CHECK_HEADER(libnf.h, AC_CHECK_LIB(nf, lnf_open, [libnf=yes],
-	  [AC_MSG_WARN([libnf not found. The nfreader module will not be compiled.])]
-	), AC_MSG_WARN([libnf.h not found. The nfreader module will not be compiled.]))
-fi
-
-AM_CONDITIONAL(HAVE_LIBNF, test x${libnf} = xyes && test x${withnfreader} = xyes)
-if [[ -z "$HAVE_LIBNF_TRUE" ]]; then
-RPM_REQUIRES+=" libnf"
-RPM_BUILDREQ+=" libnf-devel"
-fi
-
-AC_CHECK_PROG(BISON, bison, yes, [""])
-AC_CHECK_PROG(FLEX, flex, yes, [""])
-
-AM_CONDITIONAL(HAVE_BISON, test xyes = x${BISON} -a xyes = x${FLEX})
-if [[ -z "$HAVE_BISON_TRUE" ]]; then
-RPM_BUILDREQ+=" bison"
-RPM_BUILDREQ+=" flex"
-fi
-
 AC_ARG_WITH([ndp],
 	AC_HELP_STRING([--with-ndp],[Compile flow_meter with ndp library.]),
 	[
@@ -212,15 +156,8 @@ fi
 
 AM_CONDITIONAL(COMPILE_FLOWMETER,  test x${libpcap} = xyes || test x${libnfb} = xyes)
 
-AX_PROG_LUA([], [], [
-AX_LUA_HEADERS([], [AC_MSG_WARN([lua.h not found. The luamodule module will not be compiled.])])
-AX_LUA_LIBS([liblua=yes], AC_MSG_WARN([liblua not found. The luamodule module will not be compiled.]))
-], [AC_MSG_WARN([lua not found. The luamodule module will not be compiled.])])
-
-AM_CONDITIONAL(HAVE_LIBLUA, test x${liblua} = xyes)
-
 # Checks for header files.
-AC_CHECK_HEADERS([arpa/inet.h locale.h netdb.h netinet/in.h stddef.h stdint.h stdlib.h string.h sys/socket.h sys/time.h syslog.h unistd.h omp.h])
+AC_CHECK_HEADERS([arpa/inet.h locale.h netdb.h netinet/in.h stddef.h stdint.h stdlib.h string.h sys/socket.h sys/time.h syslog.h unistd.h])
 
 # Checks for typedefs, structures, and compiler characteristics.
 AC_HEADER_STDBOOL
@@ -263,69 +200,17 @@ AM_CONDITIONAL(MAKE_DEB, test x$DEBUILD != x)
 
 # list of all *.in (and Makefile.am) files to process by configure script
 AC_CONFIG_FILES([Makefile
-                 aggregator/Makefile
-                 anonymizer/Makefile
-                 bloom_history/Makefile
-                 debug_sender/Makefile
-                 device_classifier/Makefile
-                 device_classifier/libsvm/tools/train.sh
-                 device_classifier/libsvm/tools/binary.py
-                 device_classifier/libsvm/tools/grid.py
-                 device_classifier/libsvm/Makefile
-                 device_classifier/libsvm/data/Makefile
-                 device_classifier/libsvm/tools/Makefile
                  email_reporter/Makefile
                  flowcounter/Makefile
                  flow_meter/Makefile
                  flow_meter/flow_meter.bash
                  flow_meter/tests/Makefile
-                 flow_meter/nfbCInterface/Makefile
-                 ipv6stats/Makefile
-                 json_dump/Makefile
-                 json_replay/Makefile
-                 link_traffic/Makefile
-                 link_traffic/munin/Makefile
-                 link_traffic/link_traff2json.py
                  logger/Makefile
                  logreplay/Makefile
                  merger/Makefile
                  merger/test/Makefile
-                 mux/Makefile
-                 demux/Makefile
-                 natpair/Makefile
-                 nemea-modules.spec
-                 nfreader/Makefile
-                 pdns_exporter/Makefile
-                 prefix_tags/Makefile
-                 proto_traffic/Makefile
-                 proto_traffic/munin/Makefile
-                 report2idea/Makefile
-                 report2idea/amplificationdetector/Makefile
-                 report2idea/bruteforce/Makefile
-                 report2idea/ddos/Makefile
-                 report2idea/dnstunnel/Makefile
-                 report2idea/haddrscan/Makefile
-                 report2idea/hoststats/Makefile
-                 report2idea/blacklist/Makefile
-                 report2idea/minerdetector/Makefile
-                 report2idea/sipbruteforce/Makefile
-                 report2idea/sshbruteforceml/Makefile
-                 report2idea/venom/Makefile
-                 report2idea/voipfraud/Makefile
-                 report2idea/vportscan/Makefile
-                 report2idea/warden_filer/Makefile
-                 resolver/Makefile
-                 scalar-aggregator/Makefile
                  topn/Makefile
                  traffic_repeater/Makefile
-                 unirec2json/Makefile
-                 unirecfilter/lib/Makefile
-                 unirecfilter/lib/liburfilter.pc
-                 unirecfilter/Makefile
-                 endiverter/Makefile
-                 nfwriter/Makefile
-                 luamodule/Makefile
-                 luamodule/tests/Makefile
                ])
 
 AC_SUBST(RPM_REQUIRES)
@@ -358,3 +243,4 @@ echo
 echo "Installation...........: make install (as root if needed, with 'su' or 'sudo')"
 echo "  prefix...............: $prefix"
 echo
+
